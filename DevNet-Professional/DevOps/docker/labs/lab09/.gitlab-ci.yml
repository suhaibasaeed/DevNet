stages:
  - "test"
  - "build"
  - "deploy"

variables:
  CI_REGISTRY_IMAGE_DB: "net_inventory_db"
  CI_REGISTRY_IMAGE_BACKEND: "net_inventory_backend"
  CI_REGISTRY_IMAGE_FRONTEND: "net_inventory_frontend"

before_script:
  - "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD https://registry.git.lab"
  - "echo $CI_COMMIT_REF_SLUG"

test:
  stage: "test"
  script:
    - "echo Testing"
    - "pylint net_inventory/"
    - "black ."

build:
  stage: "build"
  script:
    - "echo BUILD DB"
    - "docker build -t $CI_REGISTRY_IMAGE_DB -f Dockerfile_db ."
    - "docker tag $CI_REGISTRY_IMAGE_DB registry.git.lab/cisco-devops/net_inventory/$CI_REGISTRY_IMAGE_DB:$CI_COMMIT_REF_SLUG"
    - "echo BUILD BACKEND"
    - "docker build -t $CI_REGISTRY_IMAGE_BACKEND -f Dockerfile_backend ."
    - "docker tag $CI_REGISTRY_IMAGE_BACKEND registry.git.lab/cisco-devops/net_inventory/$CI_REGISTRY_IMAGE_BACKEND:$CI_COMMIT_REF_SLUG"
    - "echo BUILD FRONTEND"
    - "docker build -t $CI_REGISTRY_IMAGE_FRONTEND -f Dockerfile_frontend ."
    - "docker tag $CI_REGISTRY_IMAGE_FRONTEND registry.git.lab/cisco-devops/net_inventory/$CI_REGISTRY_IMAGE_FRONTEND:$CI_COMMIT_REF_SLUG"

deploy:
  stage: "deploy"
  script:
    - "docker push registry.git.lab/cisco-devops/net_inventory/$CI_REGISTRY_IMAGE_DB:$CI_COMMIT_REF_SLUG"
    - "docker push registry.git.lab/cisco-devops/net_inventory/$CI_REGISTRY_IMAGE_BACKEND:$CI_COMMIT_REF_SLUG"
    - "docker push registry.git.lab/cisco-devops/net_inventory/$CI_REGISTRY_IMAGE_FRONTEND:$CI_COMMIT_REF_SLUG"
    - >-
       ssh -tt student@k8s1 
       'export SECRET_KEY=$SECRET_KEY && export SQLALCHEMY_DATABASE_URI=$SQLALCHEMY_DATABASE_URI && 
        export POSTGRES_DB=$POSTGRES_DB && export  POSTGRES_USER=$POSTGRES_USER && 
        export POSTGRES_PASSWORD=$POSTGRES_PASSWORD && 
        cd /deploy/ && 
        rm -rf ./net_inventory || true && git clone https://git.lab/cisco-devops/net_inventory.git/ && cd /deploy/net_inventory && 
        docker-compose stop || true && docker-compose rm -f || true && docker-compose up -d'
  only:
    - "master"
